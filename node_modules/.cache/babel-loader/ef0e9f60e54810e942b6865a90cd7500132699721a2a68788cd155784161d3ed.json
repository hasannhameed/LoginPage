{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\----PROJECTS----\\\\EmailProject\\\\src\\\\store\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storeUserLoggedInformation = localStorage.getItem('loggedIn');\n    if (storeUserLoggedInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const logoutHandler = () => {\n    localStorage.removeItem('isLogged');\n    setIsLoggedIn(false);\n  };\n  const logintHandler = () => {\n    localStorage.getItem('isLogged', '1');\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: logintHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","storeUserLoggedInformation","localStorage","getItem","logoutHandler","removeItem","logintHandler","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Documents/----PROJECTS----/EmailProject/src/store/AuthContext.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin : (email, password) => {}\r\n});\r\n\r\n export const AuthContextProvider = (props) => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const storeUserLoggedInformation =  localStorage.getItem('loggedIn');\r\n      \r\n        if(storeUserLoggedInformation === '1'){\r\n          setIsLoggedIn(true);\r\n        }\r\n        \r\n        }, []);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLogged');\r\n        setIsLoggedIn(false);\r\n    }\r\n\r\n    const logintHandler = () => {\r\n        localStorage.getItem('isLogged','1');\r\n        setIsLoggedIn(true);\r\n    }\r\n\r\n    return <AuthContext.Provider\r\n    value = {{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout:logoutHandler,\r\n        onLogin : logintHandler,\r\n        }}>\r\n        {props.children}\r\n    </AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC;EACpCC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,OAAO,EAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC;AACpC,CAAC,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE3C,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAI;IACV,MAAMc,0BAA0B,GAAIC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEpE,IAAGF,0BAA0B,KAAK,GAAG,EAAC;MACpCD,aAAa,CAAC,IAAI,CAAC;IACrB;EAEA,CAAC,EAAE,EAAE,CAAC;EAEV,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBF,YAAY,CAACG,UAAU,CAAC,UAAU,CAAC;IACnCL,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IACxBJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAC,GAAG,CAAC;IACpCH,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBAAOX,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAC5BC,KAAK,EAAI;MACLhB,UAAU,EAAEA,UAAU;MACtBC,QAAQ,EAACW,aAAa;MACtBV,OAAO,EAAGY;IACV,CAAE;IAAAG,QAAA,EACDX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAC3B,CAAC;AAACd,EAAA,CA/BYF,mBAAmB;AAAAiB,EAAA,GAAnBjB,mBAAmB;AAiCjC,eAAeP,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}