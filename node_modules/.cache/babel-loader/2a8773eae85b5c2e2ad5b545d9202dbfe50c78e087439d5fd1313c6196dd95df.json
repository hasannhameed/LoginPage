{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\----PROJECTS----\\\\EmailProject\\\\src\\\\store\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const LogoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  const LoginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: LogoutHandler,\n      onLogin: LoginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","LogoutHandler","localStorage","removeItem","LoginHandler","setItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Documents/----PROJECTS----/EmailProject/src/store/AuthContext.js"],"sourcesContent":["import {React,useState }from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin:(email,password)=>{}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const LogoutHandler = () =>{\r\n        localStorage.removeItem('isLoggedIn');\r\n        setIsLoggedIn(false);\r\n    }\r\n    const LoginHandler = () => {\r\n        localStorage.setItem('isLoggedIn','1');\r\n        setIsLoggedIn(true);\r\n    }\r\n    return <AuthContext.Provider value={{\r\n        isLoggedIn: isLoggedIn,\r\n         onLogout:LogoutHandler,\r\n         onLogin: LoginHandler,\r\n         }}>\r\n        {\r\n            props.children\r\n        }\r\n    </AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,SAAQA,KAAK,EAACC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAa,CAAC;EACpCC,UAAU,EAAE,KAAK;EACjBC,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBC,OAAO,EAACA,CAACC,KAAK,EAACC,QAAQ,KAAG,CAAC;AAC/B,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1C,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMc,aAAa,GAAGA,CAAA,KAAK;IACvBC,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrCH,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EACD,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBF,YAAY,CAACG,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC;IACtCL,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EACD,oBAAOX,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAChCf,UAAU,EAAEA,UAAU;MACrBC,QAAQ,EAACQ,aAAa;MACtBP,OAAO,EAAEU;IACT,CAAE;IAAAI,QAAA,EAECV,KAAK,CAACU;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAC3B,CAAC;AAAAb,EAAA,CAnBYF,mBAAmB;AAAAgB,EAAA,GAAnBhB,mBAAmB;AAqBhC,eAAeP,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}